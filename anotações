# üìù Anota√ß√µes - Laborat√≥rio AWS CloudFormation

Este reposit√≥rio cont√©m minhas **anota√ß√µes detalhadas** durante a pr√°tica do laborat√≥rio **‚ÄúImplementando sua Primeira Stack com AWS CloudFormation‚Äù**.

---

## 3Ô∏è‚É£ Validando o Template

**Passos:**  
- Console AWS ‚Üí CloudFormation ‚Üí Criar stack ‚Üí Carregar template ‚Üí Validar template  

**Erros comuns:**  
- Sintaxe YAML incorreta  
- Nome de recurso duplicado  
- Permiss√µes insuficientes  

**üí° Insight:**  
Sempre valide antes de criar a stack para evitar retrabalho.

---

## 4Ô∏è‚É£ Criando a Stack

**Passos:**  
- Escolher um **nome √∫nico** para a stack  
- Confirmar template e configura√ß√µes  
- Acompanhar progresso: `CREATE_IN_PROGRESS ‚Üí CREATE_COMPLETE`  

**üí° Insights:**  
- Anotar **IDs de recursos e outputs** da stack ajuda na depura√ß√£o.  
- Se ocorrer erro, analisar logs no console e ajustar template.

---

## 5Ô∏è‚É£ Capturas de Tela

> Salve prints da stack criada e outputs. Exemplo de imagens fict√≠cias para reposit√≥rio:

![Exemplo de Stack](images/exemplo-stack.png)  
![Console CloudFormation](images/console.png)

---

## 6Ô∏è‚É£ Dicas e Boas Pr√°ticas

- Versionar seus templates no GitHub sempre.  
- Modularizar templates grandes em arquivos menores facilita manuten√ß√£o.  
- Documentar cada passo evita confus√£o em projetos futuros.  
- Testar pequenas stacks primeiro antes de criar recursos complexos.

---

## 7Ô∏è‚É£ Erros e Solu√ß√µes

| Erro | Causa | Solu√ß√£o |
|------|-------|---------|
| Nome de bucket duplicado | Bucket j√° existe | Alterar nome para algo √∫nico |
| Permiss√£o negada | IAM insuficiente | Ajustar permiss√µes IAM |
| Sintaxe YAML inv√°lida | Espa√ßos ou indenta√ß√£o errada | Revisar YAML linha a linha |

---

## 8Ô∏è‚É£ Conclus√£o

- CloudFormation permite **automatizar cria√ß√£o e gerenciamento de recursos** na AWS.  
- Documentar o passo a passo consolidou aprendizado e facilita **refer√™ncia futura**.  
- Pr√≥ximo passo: criar stacks mais complexas incluindo **EC2, IAM e DynamoDB**.

---

## üí° Insights Gerais

- Nomear recursos de forma clara ajuda na identifica√ß√£o depois.  
- YAML √© mais leg√≠vel que JSON, mas ambos funcionam.  
- Pequenas stacks ajudam a testar antes de criar recursos complexos.
